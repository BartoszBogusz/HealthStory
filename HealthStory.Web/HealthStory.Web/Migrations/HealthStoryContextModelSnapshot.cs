// <auto-generated />
using System;
using HealthStory.Web.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HealthStory.Web.Migrations
{
    [DbContext(typeof(HealthStoryContext))]
    partial class HealthStoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687");

            modelBuilder.Entity("HealthStory.Web.Entities.AppUser", b =>
                {
                    b.Property<int>("AppUserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Login");

                    b.Property<string>("Password");

                    b.HasKey("AppUserId");

                    b.ToTable("AppUsers");
                });

            modelBuilder.Entity("HealthStory.Web.Entities.BloodTest", b =>
                {
                    b.Property<int>("BloodTestId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AppUserId");

                    b.Property<DateTime>("Date");

                    b.HasKey("BloodTestId");

                    b.HasIndex("AppUserId");

                    b.ToTable("BloodTests");
                });

            modelBuilder.Entity("HealthStory.Web.Entities.BloodTestSubstance", b =>
                {
                    b.Property<int>("BloodTestSubstanceId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BloodTestId");

                    b.Property<int>("SubstanceInfoId");

                    b.Property<int>("Value");

                    b.HasKey("BloodTestSubstanceId");

                    b.HasIndex("BloodTestId");

                    b.HasIndex("SubstanceInfoId");

                    b.ToTable("BloodTestsSubstances");
                });

            modelBuilder.Entity("HealthStory.Web.Entities.SubstanceInfo", b =>
                {
                    b.Property<int>("SubstanceDefinitionId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Max");

                    b.Property<decimal>("Min");

                    b.Property<string>("Name");

                    b.Property<string>("Unit");

                    b.HasKey("SubstanceDefinitionId");

                    b.ToTable("SubstanceInfo");
                });

            modelBuilder.Entity("HealthStory.Web.Entities.BloodTest", b =>
                {
                    b.HasOne("HealthStory.Web.Entities.AppUser", "AppUser")
                        .WithMany("BloodTests")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HealthStory.Web.Entities.BloodTestSubstance", b =>
                {
                    b.HasOne("HealthStory.Web.Entities.BloodTest", "BloodTest")
                        .WithMany("BloodTestSubstances")
                        .HasForeignKey("BloodTestId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HealthStory.Web.Entities.SubstanceInfo", "SubstanceInfo")
                        .WithMany("BloodTestSubstances")
                        .HasForeignKey("SubstanceInfoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
